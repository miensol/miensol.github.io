# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
    childImageSharp: ImageSharp
    "Returns the first child node of type MarkdownRemark or null if there are no children of given type on this node"
    childMarkdownRemark: MarkdownRemark
    children: [Node!]!
    "Returns all children nodes filtered by type ImageSharp"
    childrenImageSharp: [ImageSharp]
    "Returns all children nodes filtered by type MarkdownRemark"
    childrenMarkdownRemark: [MarkdownRemark]
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Options to pass to sharp when generating AVIF images."
        avifOptions: AVIFOptions,
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat],
        """

        The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
        The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
        matching the aspect ratio of the source image.
        """
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
        and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overridden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download.
        You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
        does not actually span the full width of the screen, in which case you should pass the correct size here.
        """
        sizes: String,
        "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type MarkdownHeading {
    depth: Int
    id: String
    value: String
}

type MarkdownRemark implements Node {
    children: [Node!]!
    excerpt(format: MarkdownExcerptFormats = PLAIN, pruneLength: Int = 140, truncate: Boolean = false): String
    excerptAst(pruneLength: Int = 140, truncate: Boolean = false): JSON
    fields: MarkdownRemarkFields
    fileAbsolutePath: String
    frontmatter: MarkdownRemarkFrontmatter
    headings(depth: MarkdownHeadingLevels): [MarkdownHeading]
    html: String
    htmlAst: JSON
    id: ID!
    internal: Internal!
    parent: Node
    rawMarkdownBody: String
    tableOfContents(absolute: Boolean = false, heading: String, maxDepth: Int, pathToSlugField: String = ""): String
    timeToRead: Int
    wordCount: MarkdownWordCount
}

type MarkdownRemarkConnection {
    distinct(field: MarkdownRemarkFieldsEnum!): [String!]!
    edges: [MarkdownRemarkEdge!]!
    group(field: MarkdownRemarkFieldsEnum!, limit: Int, skip: Int): [MarkdownRemarkGroupConnection!]!
    max(field: MarkdownRemarkFieldsEnum!): Float
    min(field: MarkdownRemarkFieldsEnum!): Float
    nodes: [MarkdownRemark!]!
    pageInfo: PageInfo!
    sum(field: MarkdownRemarkFieldsEnum!): Float
    totalCount: Int!
}

type MarkdownRemarkEdge {
    next: MarkdownRemark
    node: MarkdownRemark!
    previous: MarkdownRemark
}

type MarkdownRemarkFields {
    categorySlug: String
    redirectFrom: [String]
    slug: String
    tagSlugs: [String]
}

type MarkdownRemarkFrontmatter {
    blogger: MarkdownRemarkFrontmatterBlogger
    category: String
    comments: Boolean
    crosspost: Boolean
    date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    draft: Boolean
    guid: String
    permalink: String
    slug: String
    socialImage: File
    tags: [String]
    template: String
    title: String
    updated(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    uuid: String
}

type MarkdownRemarkFrontmatterBlogger {
    comments: String
    postid: String
    siteid: String
}

type MarkdownRemarkGroupConnection {
    edges: [MarkdownRemarkEdge!]!
    field: String!
    fieldValue: String
    nodes: [MarkdownRemark!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type MarkdownWordCount {
    paragraphs: Int
    sentences: Int
    words: Int
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allMarkdownRemark(filter: MarkdownRemarkFilterInput, limit: Int, skip: Int, sort: MarkdownRemarkSortInput): MarkdownRemarkConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, childMarkdownRemark: MarkdownRemarkFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, childrenMarkdownRemark: MarkdownRemarkFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
    markdownRemark(children: NodeFilterListInput, excerpt: StringQueryOperatorInput, excerptAst: JSONQueryOperatorInput, fields: MarkdownRemarkFieldsFilterInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MarkdownRemarkFrontmatterFilterInput, headings: MarkdownHeadingFilterListInput, html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, rawMarkdownBody: StringQueryOperatorInput, tableOfContents: StringQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MarkdownWordCountFilterInput): MarkdownRemark
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteFunction implements Node {
    absoluteCompiledFilePath: String!
    children: [Node!]!
    functionRoute: String!
    id: ID!
    internal: Internal!
    matchPath: String
    originalAbsoluteFilePath: String!
    originalRelativeFilePath: String!
    parent: Node
    pluginName: String!
    relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteFunctionEdge {
    next: SiteFunction
    node: SiteFunction!
    previous: SiteFunction
}

type SiteFunctionGroupConnection {
    edges: [SiteFunctionEdge!]!
    field: String!
    fieldValue: String
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteGroupConnection {
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    context: SitePageContext
    id: ID!
    internal: Internal!
    internalComponentName: String!
    isCreatedByStatefulCreatePages: Boolean
    matchPath: String
    parent: Node
    path: String!
    pluginCreator: SitePlugin
    pluginCreatorId: String
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePageContext {
    category: String
    currentPage: Int
    hasNextPage: Boolean
    hasPrevPage: Boolean
    nextPagePath: String
    postsLimit: Int
    postsOffset: Int
    prevPagePath: String
    slug: String
    tag: String
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: SitePluginPackageJson
    parent: Node
    pluginFilepath: String
    pluginOptions: SitePluginPluginOptions
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginPackageJson {
    author: String
    dependencies: [SitePluginPackageJsonDependencies]
    description: String
    devDependencies: [SitePluginPackageJsonDevDependencies]
    keywords: [String]
    license: String
    main: String
    name: String
    peerDependencies: [SitePluginPackageJsonPeerDependencies]
    version: String
}

type SitePluginPackageJsonDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonDevDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonPeerDependencies {
    name: String
    version: String
}

type SitePluginPluginOptions {
    allExtensions: Boolean
    background_color: String
    base64Width: Int
    bucketName: String
    cacheDigest: String
    cache_busting_mode: String
    className: String
    color: String
    createLinkInHead: Boolean
    crossOrigin: String
    cssLoaderOptions: SitePluginPluginOptionsCssLoaderOptions
    defaultQuality: Int
    display: String
    entryLimit: Int
    exclude: [String]
    failOnError: Boolean
    feeds: [SitePluginPluginOptionsFeeds]
    hostname: String
    icon: String
    ignore: [String]
    includePaths: [SitePluginPluginOptionsIncludePaths]
    include_favicon: Boolean
    isTSX: Boolean
    jsxPragma: String
    languageExtensions: [SitePluginPluginOptionsLanguageExtensions]
    legacy: Boolean
    maxWidth: Int
    modulePath: String
    name: String
    offsetY: Int
    output: String
    path: String
    pathCheck: Boolean
    pluginConfig: SitePluginPluginOptionsPluginConfig
    plugins: [SitePluginPluginOptionsPlugins]
    postCssPlugins: [SitePluginPluginOptionsPostCssPlugins]
    protocol: String
    query: String
    region: String
    related: Boolean
    short_name: String
    start_url: String
    staticFolderName: String
    strict: String
    stripMetadata: Boolean
    theme_color: String
    theme_color_in_head: Boolean
    trackingIds: [String]
    urlOverrides: [SitePluginPluginOptionsUrlOverrides]
    width: Int
    withWebp: Boolean
    wrapperStyle: String
}

type SitePluginPluginOptionsCssLoaderOptions {
    camelCase: Boolean
}

type SitePluginPluginOptionsFeeds {
    output: String
    query: String
    title: String
}

type SitePluginPluginOptionsIncludePaths {
    regex: String
}

type SitePluginPluginOptionsLanguageExtensions {
    extend: String
    language: String
}

type SitePluginPluginOptionsPluginConfig {
    head: Boolean
}

type SitePluginPluginOptionsPlugins {
    browserAPIs: [String]
    id: String
    name: String
    nodeAPIs: [String]
    pluginFilepath: String
    pluginOptions: SitePluginPluginOptionsPluginsPluginOptions
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginPluginOptionsPluginsPluginOptions {
    className: String
    exclude: [String]
    languageExtensions: [SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensions]
    maxWidth: Int
    offsetY: Int
    related: Boolean
    staticFolderName: String
    strict: String
    urlOverrides: [SitePluginPluginOptionsPluginsPluginOptionsUrlOverrides]
    width: Int
    withWebp: Boolean
    wrapperStyle: String
}

type SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensions {
    extend: String
    language: String
}

type SitePluginPluginOptionsPluginsPluginOptionsUrlOverrides {
    id: String
}

type SitePluginPluginOptionsPostCssPlugins {
    postcssPlugin: String
}

type SitePluginPluginOptionsUrlOverrides {
    id: String
}

type SiteSiteMetadata {
    author: SiteSiteMetadataAuthor
    copyright: String
    description: String
    disqusShortname: String
    menu: [SiteSiteMetadataMenu]
    siteUrl: String
    subtitle: String
    title: String
    url: String
}

type SiteSiteMetadataAuthor {
    bio: String
    contacts: SiteSiteMetadataAuthorContacts
    name: String
    photo: String
}

type SiteSiteMetadataAuthorContacts {
    codepen: String
    email: String
    facebook: String
    github: String
    gitlab: String
    instagram: String
    line: String
    linkedin: String
    rss: String
    soundcloud: String
    stackoverflow: String
    telegram: String
    twitter: String
    vkontakte: String
    weibo: String
    youtube: String
}

type SiteSiteMetadataMenu {
    label: String
    path: String
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___fields___categorySlug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___fields___redirectFrom @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___fields___slug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___fields___tagSlugs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___frontmatter___blogger___comments
    childMarkdownRemark___frontmatter___blogger___postid
    childMarkdownRemark___frontmatter___blogger___siteid
    childMarkdownRemark___frontmatter___category
    childMarkdownRemark___frontmatter___comments
    childMarkdownRemark___frontmatter___crosspost
    childMarkdownRemark___frontmatter___date
    childMarkdownRemark___frontmatter___description
    childMarkdownRemark___frontmatter___draft
    childMarkdownRemark___frontmatter___guid
    childMarkdownRemark___frontmatter___permalink
    childMarkdownRemark___frontmatter___slug
    childMarkdownRemark___frontmatter___socialImage___absolutePath
    childMarkdownRemark___frontmatter___socialImage___accessTime
    childMarkdownRemark___frontmatter___socialImage___atime
    childMarkdownRemark___frontmatter___socialImage___atimeMs
    childMarkdownRemark___frontmatter___socialImage___base
    childMarkdownRemark___frontmatter___socialImage___birthTime
    childMarkdownRemark___frontmatter___socialImage___birthtime
    childMarkdownRemark___frontmatter___socialImage___birthtimeMs
    childMarkdownRemark___frontmatter___socialImage___blksize
    childMarkdownRemark___frontmatter___socialImage___blocks
    childMarkdownRemark___frontmatter___socialImage___changeTime
    childMarkdownRemark___frontmatter___socialImage___children
    childMarkdownRemark___frontmatter___socialImage___childrenImageSharp
    childMarkdownRemark___frontmatter___socialImage___childrenMarkdownRemark
    childMarkdownRemark___frontmatter___socialImage___ctime
    childMarkdownRemark___frontmatter___socialImage___ctimeMs
    childMarkdownRemark___frontmatter___socialImage___dev
    childMarkdownRemark___frontmatter___socialImage___dir
    childMarkdownRemark___frontmatter___socialImage___ext
    childMarkdownRemark___frontmatter___socialImage___extension
    childMarkdownRemark___frontmatter___socialImage___gid
    childMarkdownRemark___frontmatter___socialImage___id
    childMarkdownRemark___frontmatter___socialImage___ino
    childMarkdownRemark___frontmatter___socialImage___mode
    childMarkdownRemark___frontmatter___socialImage___modifiedTime
    childMarkdownRemark___frontmatter___socialImage___mtime
    childMarkdownRemark___frontmatter___socialImage___mtimeMs
    childMarkdownRemark___frontmatter___socialImage___name
    childMarkdownRemark___frontmatter___socialImage___nlink
    childMarkdownRemark___frontmatter___socialImage___prettySize
    childMarkdownRemark___frontmatter___socialImage___publicURL
    childMarkdownRemark___frontmatter___socialImage___rdev
    childMarkdownRemark___frontmatter___socialImage___relativeDirectory
    childMarkdownRemark___frontmatter___socialImage___relativePath
    childMarkdownRemark___frontmatter___socialImage___root
    childMarkdownRemark___frontmatter___socialImage___size
    childMarkdownRemark___frontmatter___socialImage___sourceInstanceName
    childMarkdownRemark___frontmatter___socialImage___uid
    childMarkdownRemark___frontmatter___tags
    childMarkdownRemark___frontmatter___template
    childMarkdownRemark___frontmatter___title
    childMarkdownRemark___frontmatter___updated
    childMarkdownRemark___frontmatter___uuid
    childMarkdownRemark___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___id
    childMarkdownRemark___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childMarkdownRemark___wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children
    childrenImageSharp
    childrenImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark
    childrenMarkdownRemark___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___fields___categorySlug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___fields___redirectFrom @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___fields___slug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___fields___tagSlugs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___frontmatter___blogger___comments
    childrenMarkdownRemark___frontmatter___blogger___postid
    childrenMarkdownRemark___frontmatter___blogger___siteid
    childrenMarkdownRemark___frontmatter___category
    childrenMarkdownRemark___frontmatter___comments
    childrenMarkdownRemark___frontmatter___crosspost
    childrenMarkdownRemark___frontmatter___date
    childrenMarkdownRemark___frontmatter___description
    childrenMarkdownRemark___frontmatter___draft
    childrenMarkdownRemark___frontmatter___guid
    childrenMarkdownRemark___frontmatter___permalink
    childrenMarkdownRemark___frontmatter___slug
    childrenMarkdownRemark___frontmatter___socialImage___absolutePath
    childrenMarkdownRemark___frontmatter___socialImage___accessTime
    childrenMarkdownRemark___frontmatter___socialImage___atime
    childrenMarkdownRemark___frontmatter___socialImage___atimeMs
    childrenMarkdownRemark___frontmatter___socialImage___base
    childrenMarkdownRemark___frontmatter___socialImage___birthTime
    childrenMarkdownRemark___frontmatter___socialImage___birthtime
    childrenMarkdownRemark___frontmatter___socialImage___birthtimeMs
    childrenMarkdownRemark___frontmatter___socialImage___blksize
    childrenMarkdownRemark___frontmatter___socialImage___blocks
    childrenMarkdownRemark___frontmatter___socialImage___changeTime
    childrenMarkdownRemark___frontmatter___socialImage___children
    childrenMarkdownRemark___frontmatter___socialImage___childrenImageSharp
    childrenMarkdownRemark___frontmatter___socialImage___childrenMarkdownRemark
    childrenMarkdownRemark___frontmatter___socialImage___ctime
    childrenMarkdownRemark___frontmatter___socialImage___ctimeMs
    childrenMarkdownRemark___frontmatter___socialImage___dev
    childrenMarkdownRemark___frontmatter___socialImage___dir
    childrenMarkdownRemark___frontmatter___socialImage___ext
    childrenMarkdownRemark___frontmatter___socialImage___extension
    childrenMarkdownRemark___frontmatter___socialImage___gid
    childrenMarkdownRemark___frontmatter___socialImage___id
    childrenMarkdownRemark___frontmatter___socialImage___ino
    childrenMarkdownRemark___frontmatter___socialImage___mode
    childrenMarkdownRemark___frontmatter___socialImage___modifiedTime
    childrenMarkdownRemark___frontmatter___socialImage___mtime
    childrenMarkdownRemark___frontmatter___socialImage___mtimeMs
    childrenMarkdownRemark___frontmatter___socialImage___name
    childrenMarkdownRemark___frontmatter___socialImage___nlink
    childrenMarkdownRemark___frontmatter___socialImage___prettySize
    childrenMarkdownRemark___frontmatter___socialImage___publicURL
    childrenMarkdownRemark___frontmatter___socialImage___rdev
    childrenMarkdownRemark___frontmatter___socialImage___relativeDirectory
    childrenMarkdownRemark___frontmatter___socialImage___relativePath
    childrenMarkdownRemark___frontmatter___socialImage___root
    childrenMarkdownRemark___frontmatter___socialImage___size
    childrenMarkdownRemark___frontmatter___socialImage___sourceInstanceName
    childrenMarkdownRemark___frontmatter___socialImage___uid
    childrenMarkdownRemark___frontmatter___tags
    childrenMarkdownRemark___frontmatter___template
    childrenMarkdownRemark___frontmatter___title
    childrenMarkdownRemark___frontmatter___updated
    childrenMarkdownRemark___frontmatter___uuid
    childrenMarkdownRemark___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___id
    childrenMarkdownRemark___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMarkdownRemark___wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MarkdownExcerptFormats {
    HTML
    MARKDOWN
    PLAIN
}

enum MarkdownHeadingLevels {
    h1
    h2
    h3
    h4
    h5
    h6
}

enum MarkdownRemarkFieldsEnum {
    children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fields___categorySlug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fields___redirectFrom @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fields___slug @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fields___tagSlugs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___blogger___comments
    frontmatter___blogger___postid
    frontmatter___blogger___siteid
    frontmatter___category
    frontmatter___comments
    frontmatter___crosspost
    frontmatter___date
    frontmatter___description
    frontmatter___draft
    frontmatter___guid
    frontmatter___permalink
    frontmatter___slug
    frontmatter___socialImage___absolutePath
    frontmatter___socialImage___accessTime
    frontmatter___socialImage___atime
    frontmatter___socialImage___atimeMs
    frontmatter___socialImage___base
    frontmatter___socialImage___birthTime
    frontmatter___socialImage___birthtime
    frontmatter___socialImage___birthtimeMs
    frontmatter___socialImage___blksize
    frontmatter___socialImage___blocks
    frontmatter___socialImage___changeTime
    frontmatter___socialImage___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___id
    frontmatter___socialImage___childMarkdownRemark___rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childMarkdownRemark___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___children
    frontmatter___socialImage___childrenImageSharp
    frontmatter___socialImage___childrenImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark
    frontmatter___socialImage___childrenMarkdownRemark___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___excerpt @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___excerptAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___fileAbsolutePath @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___id
    frontmatter___socialImage___childrenMarkdownRemark___rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___childrenMarkdownRemark___timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontmatter___socialImage___children___children
    frontmatter___socialImage___children___id
    frontmatter___socialImage___ctime
    frontmatter___socialImage___ctimeMs
    frontmatter___socialImage___dev
    frontmatter___socialImage___dir
    frontmatter___socialImage___ext
    frontmatter___socialImage___extension
    frontmatter___socialImage___gid
    frontmatter___socialImage___id
    frontmatter___socialImage___ino
    frontmatter___socialImage___internal___content
    frontmatter___socialImage___internal___contentDigest
    frontmatter___socialImage___internal___description
    frontmatter___socialImage___internal___fieldOwners
    frontmatter___socialImage___internal___ignoreType
    frontmatter___socialImage___internal___mediaType
    frontmatter___socialImage___internal___owner
    frontmatter___socialImage___internal___type
    frontmatter___socialImage___mode
    frontmatter___socialImage___modifiedTime
    frontmatter___socialImage___mtime
    frontmatter___socialImage___mtimeMs
    frontmatter___socialImage___name
    frontmatter___socialImage___nlink
    frontmatter___socialImage___parent___children
    frontmatter___socialImage___parent___id
    frontmatter___socialImage___prettySize
    frontmatter___socialImage___publicURL
    frontmatter___socialImage___rdev
    frontmatter___socialImage___relativeDirectory
    frontmatter___socialImage___relativePath
    frontmatter___socialImage___root
    frontmatter___socialImage___size
    frontmatter___socialImage___sourceInstanceName
    frontmatter___socialImage___uid
    frontmatter___tags
    frontmatter___template
    frontmatter___title
    frontmatter___updated
    frontmatter___uuid
    headings @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    headings___depth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    headings___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    headings___value @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    html @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    htmlAst @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    id
    internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    rawMarkdownBody @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    tableOfContents @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    timeToRead @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___paragraphs @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___sentences @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___words @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___author___bio
    siteMetadata___author___contacts___codepen
    siteMetadata___author___contacts___email
    siteMetadata___author___contacts___facebook
    siteMetadata___author___contacts___github
    siteMetadata___author___contacts___gitlab
    siteMetadata___author___contacts___instagram
    siteMetadata___author___contacts___line
    siteMetadata___author___contacts___linkedin
    siteMetadata___author___contacts___rss
    siteMetadata___author___contacts___soundcloud
    siteMetadata___author___contacts___stackoverflow
    siteMetadata___author___contacts___telegram
    siteMetadata___author___contacts___twitter
    siteMetadata___author___contacts___vkontakte
    siteMetadata___author___contacts___weibo
    siteMetadata___author___contacts___youtube
    siteMetadata___author___name
    siteMetadata___author___photo
    siteMetadata___copyright
    siteMetadata___description
    siteMetadata___disqusShortname
    siteMetadata___menu
    siteMetadata___menu___label
    siteMetadata___menu___path
    siteMetadata___siteUrl
    siteMetadata___subtitle
    siteMetadata___title
    siteMetadata___url
}

enum SiteFunctionFieldsEnum {
    absoluteCompiledFilePath
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    functionRoute
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    originalAbsoluteFilePath
    originalRelativeFilePath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginName
    relativeCompiledFilePath
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    context___category
    context___currentPage
    context___hasNextPage
    context___hasPrevPage
    context___nextPagePath
    context___postsLimit
    context___postsOffset
    context___prevPagePath
    context___slug
    context___tag
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    isCreatedByStatefulCreatePages
    matchPath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreatorId
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson___author
    pluginCreator___packageJson___dependencies
    pluginCreator___packageJson___dependencies___name
    pluginCreator___packageJson___dependencies___version
    pluginCreator___packageJson___description
    pluginCreator___packageJson___devDependencies
    pluginCreator___packageJson___devDependencies___name
    pluginCreator___packageJson___devDependencies___version
    pluginCreator___packageJson___keywords
    pluginCreator___packageJson___license
    pluginCreator___packageJson___main
    pluginCreator___packageJson___name
    pluginCreator___packageJson___peerDependencies
    pluginCreator___packageJson___peerDependencies___name
    pluginCreator___packageJson___peerDependencies___version
    pluginCreator___packageJson___version
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions___allExtensions
    pluginCreator___pluginOptions___background_color
    pluginCreator___pluginOptions___base64Width
    pluginCreator___pluginOptions___bucketName
    pluginCreator___pluginOptions___cacheDigest
    pluginCreator___pluginOptions___cache_busting_mode
    pluginCreator___pluginOptions___className
    pluginCreator___pluginOptions___color
    pluginCreator___pluginOptions___createLinkInHead
    pluginCreator___pluginOptions___crossOrigin
    pluginCreator___pluginOptions___cssLoaderOptions___camelCase
    pluginCreator___pluginOptions___defaultQuality
    pluginCreator___pluginOptions___display
    pluginCreator___pluginOptions___entryLimit
    pluginCreator___pluginOptions___exclude
    pluginCreator___pluginOptions___failOnError
    pluginCreator___pluginOptions___feeds
    pluginCreator___pluginOptions___feeds___output
    pluginCreator___pluginOptions___feeds___query
    pluginCreator___pluginOptions___feeds___title
    pluginCreator___pluginOptions___hostname
    pluginCreator___pluginOptions___icon
    pluginCreator___pluginOptions___ignore
    pluginCreator___pluginOptions___includePaths
    pluginCreator___pluginOptions___includePaths___regex
    pluginCreator___pluginOptions___include_favicon
    pluginCreator___pluginOptions___isTSX
    pluginCreator___pluginOptions___jsxPragma
    pluginCreator___pluginOptions___languageExtensions
    pluginCreator___pluginOptions___languageExtensions___extend
    pluginCreator___pluginOptions___languageExtensions___language
    pluginCreator___pluginOptions___legacy
    pluginCreator___pluginOptions___maxWidth
    pluginCreator___pluginOptions___modulePath
    pluginCreator___pluginOptions___name
    pluginCreator___pluginOptions___offsetY
    pluginCreator___pluginOptions___output
    pluginCreator___pluginOptions___path
    pluginCreator___pluginOptions___pathCheck
    pluginCreator___pluginOptions___pluginConfig___head
    pluginCreator___pluginOptions___plugins
    pluginCreator___pluginOptions___plugins___browserAPIs
    pluginCreator___pluginOptions___plugins___id
    pluginCreator___pluginOptions___plugins___name
    pluginCreator___pluginOptions___plugins___nodeAPIs
    pluginCreator___pluginOptions___plugins___pluginFilepath
    pluginCreator___pluginOptions___plugins___resolve
    pluginCreator___pluginOptions___plugins___ssrAPIs
    pluginCreator___pluginOptions___plugins___version
    pluginCreator___pluginOptions___postCssPlugins
    pluginCreator___pluginOptions___postCssPlugins___postcssPlugin
    pluginCreator___pluginOptions___protocol
    pluginCreator___pluginOptions___query
    pluginCreator___pluginOptions___region
    pluginCreator___pluginOptions___related
    pluginCreator___pluginOptions___short_name
    pluginCreator___pluginOptions___start_url
    pluginCreator___pluginOptions___staticFolderName
    pluginCreator___pluginOptions___strict
    pluginCreator___pluginOptions___stripMetadata
    pluginCreator___pluginOptions___theme_color
    pluginCreator___pluginOptions___theme_color_in_head
    pluginCreator___pluginOptions___trackingIds
    pluginCreator___pluginOptions___urlOverrides
    pluginCreator___pluginOptions___urlOverrides___id
    pluginCreator___pluginOptions___width
    pluginCreator___pluginOptions___withWebp
    pluginCreator___pluginOptions___wrapperStyle
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson___author
    packageJson___dependencies
    packageJson___dependencies___name
    packageJson___dependencies___version
    packageJson___description
    packageJson___devDependencies
    packageJson___devDependencies___name
    packageJson___devDependencies___version
    packageJson___keywords
    packageJson___license
    packageJson___main
    packageJson___name
    packageJson___peerDependencies
    packageJson___peerDependencies___name
    packageJson___peerDependencies___version
    packageJson___version
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions___allExtensions
    pluginOptions___background_color
    pluginOptions___base64Width
    pluginOptions___bucketName
    pluginOptions___cacheDigest
    pluginOptions___cache_busting_mode
    pluginOptions___className
    pluginOptions___color
    pluginOptions___createLinkInHead
    pluginOptions___crossOrigin
    pluginOptions___cssLoaderOptions___camelCase
    pluginOptions___defaultQuality
    pluginOptions___display
    pluginOptions___entryLimit
    pluginOptions___exclude
    pluginOptions___failOnError
    pluginOptions___feeds
    pluginOptions___feeds___output
    pluginOptions___feeds___query
    pluginOptions___feeds___title
    pluginOptions___hostname
    pluginOptions___icon
    pluginOptions___ignore
    pluginOptions___includePaths
    pluginOptions___includePaths___regex
    pluginOptions___include_favicon
    pluginOptions___isTSX
    pluginOptions___jsxPragma
    pluginOptions___languageExtensions
    pluginOptions___languageExtensions___extend
    pluginOptions___languageExtensions___language
    pluginOptions___legacy
    pluginOptions___maxWidth
    pluginOptions___modulePath
    pluginOptions___name
    pluginOptions___offsetY
    pluginOptions___output
    pluginOptions___path
    pluginOptions___pathCheck
    pluginOptions___pluginConfig___head
    pluginOptions___plugins
    pluginOptions___plugins___browserAPIs
    pluginOptions___plugins___id
    pluginOptions___plugins___name
    pluginOptions___plugins___nodeAPIs
    pluginOptions___plugins___pluginFilepath
    pluginOptions___plugins___pluginOptions___className
    pluginOptions___plugins___pluginOptions___exclude
    pluginOptions___plugins___pluginOptions___languageExtensions
    pluginOptions___plugins___pluginOptions___maxWidth
    pluginOptions___plugins___pluginOptions___offsetY
    pluginOptions___plugins___pluginOptions___related
    pluginOptions___plugins___pluginOptions___staticFolderName
    pluginOptions___plugins___pluginOptions___strict
    pluginOptions___plugins___pluginOptions___urlOverrides
    pluginOptions___plugins___pluginOptions___width
    pluginOptions___plugins___pluginOptions___withWebp
    pluginOptions___plugins___pluginOptions___wrapperStyle
    pluginOptions___plugins___resolve
    pluginOptions___plugins___ssrAPIs
    pluginOptions___plugins___version
    pluginOptions___postCssPlugins
    pluginOptions___postCssPlugins___postcssPlugin
    pluginOptions___protocol
    pluginOptions___query
    pluginOptions___region
    pluginOptions___related
    pluginOptions___short_name
    pluginOptions___start_url
    pluginOptions___staticFolderName
    pluginOptions___strict
    pluginOptions___stripMetadata
    pluginOptions___theme_color
    pluginOptions___theme_color_in_head
    pluginOptions___trackingIds
    pluginOptions___urlOverrides
    pluginOptions___urlOverrides___id
    pluginOptions___width
    pluginOptions___withWebp
    pluginOptions___wrapperStyle
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

input AVIFOptions {
    lossless: Boolean
    quality: Int
    speed: Int
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    childMarkdownRemark: MarkdownRemarkFilterInput
    children: NodeFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    childrenMarkdownRemark: MarkdownRemarkFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
    elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input MarkdownHeadingFilterInput {
    depth: IntQueryOperatorInput
    id: StringQueryOperatorInput
    value: StringQueryOperatorInput
}

input MarkdownHeadingFilterListInput {
    elemMatch: MarkdownHeadingFilterInput
}

input MarkdownRemarkFieldsFilterInput {
    categorySlug: StringQueryOperatorInput
    redirectFrom: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    tagSlugs: StringQueryOperatorInput
}

input MarkdownRemarkFilterInput {
    children: NodeFilterListInput
    excerpt: StringQueryOperatorInput
    excerptAst: JSONQueryOperatorInput
    fields: MarkdownRemarkFieldsFilterInput
    fileAbsolutePath: StringQueryOperatorInput
    frontmatter: MarkdownRemarkFrontmatterFilterInput
    headings: MarkdownHeadingFilterListInput
    html: StringQueryOperatorInput
    htmlAst: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    rawMarkdownBody: StringQueryOperatorInput
    tableOfContents: StringQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: MarkdownWordCountFilterInput
}

input MarkdownRemarkFilterListInput {
    elemMatch: MarkdownRemarkFilterInput
}

input MarkdownRemarkFrontmatterBloggerFilterInput {
    comments: StringQueryOperatorInput
    postid: StringQueryOperatorInput
    siteid: StringQueryOperatorInput
}

input MarkdownRemarkFrontmatterFilterInput {
    blogger: MarkdownRemarkFrontmatterBloggerFilterInput
    category: StringQueryOperatorInput
    comments: BooleanQueryOperatorInput
    crosspost: BooleanQueryOperatorInput
    date: DateQueryOperatorInput
    description: StringQueryOperatorInput
    draft: BooleanQueryOperatorInput
    guid: StringQueryOperatorInput
    permalink: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    socialImage: FileFilterInput
    tags: StringQueryOperatorInput
    template: StringQueryOperatorInput
    title: StringQueryOperatorInput
    updated: DateQueryOperatorInput
    uuid: StringQueryOperatorInput
}

input MarkdownRemarkSortInput {
    fields: [MarkdownRemarkFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input MarkdownWordCountFilterInput {
    paragraphs: IntQueryOperatorInput
    sentences: IntQueryOperatorInput
    words: IntQueryOperatorInput
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SiteFunctionFilterInput {
    absoluteCompiledFilePath: StringQueryOperatorInput
    children: NodeFilterListInput
    functionRoute: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    matchPath: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    parent: NodeFilterInput
    pluginName: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
    fields: [SiteFunctionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePageContextFilterInput {
    category: StringQueryOperatorInput
    currentPage: IntQueryOperatorInput
    hasNextPage: BooleanQueryOperatorInput
    hasPrevPage: BooleanQueryOperatorInput
    nextPagePath: StringQueryOperatorInput
    postsLimit: IntQueryOperatorInput
    postsOffset: IntQueryOperatorInput
    prevPagePath: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    tag: StringQueryOperatorInput
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    context: SitePageContextFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
    matchPath: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
    pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: SitePluginPackageJsonFilterInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsFilterInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
    author: StringQueryOperatorInput
    dependencies: SitePluginPackageJsonDependenciesFilterListInput
    description: StringQueryOperatorInput
    devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
    keywords: StringQueryOperatorInput
    license: StringQueryOperatorInput
    main: StringQueryOperatorInput
    name: StringQueryOperatorInput
    peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsCssLoaderOptionsFilterInput {
    camelCase: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsFeedsFilterInput {
    output: StringQueryOperatorInput
    query: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SitePluginPluginOptionsFeedsFilterListInput {
    elemMatch: SitePluginPluginOptionsFeedsFilterInput
}

input SitePluginPluginOptionsFilterInput {
    allExtensions: BooleanQueryOperatorInput
    background_color: StringQueryOperatorInput
    base64Width: IntQueryOperatorInput
    bucketName: StringQueryOperatorInput
    cacheDigest: StringQueryOperatorInput
    cache_busting_mode: StringQueryOperatorInput
    className: StringQueryOperatorInput
    color: StringQueryOperatorInput
    createLinkInHead: BooleanQueryOperatorInput
    crossOrigin: StringQueryOperatorInput
    cssLoaderOptions: SitePluginPluginOptionsCssLoaderOptionsFilterInput
    defaultQuality: IntQueryOperatorInput
    display: StringQueryOperatorInput
    entryLimit: IntQueryOperatorInput
    exclude: StringQueryOperatorInput
    failOnError: BooleanQueryOperatorInput
    feeds: SitePluginPluginOptionsFeedsFilterListInput
    hostname: StringQueryOperatorInput
    icon: StringQueryOperatorInput
    ignore: StringQueryOperatorInput
    includePaths: SitePluginPluginOptionsIncludePathsFilterListInput
    include_favicon: BooleanQueryOperatorInput
    isTSX: BooleanQueryOperatorInput
    jsxPragma: StringQueryOperatorInput
    languageExtensions: SitePluginPluginOptionsLanguageExtensionsFilterListInput
    legacy: BooleanQueryOperatorInput
    maxWidth: IntQueryOperatorInput
    modulePath: StringQueryOperatorInput
    name: StringQueryOperatorInput
    offsetY: IntQueryOperatorInput
    output: StringQueryOperatorInput
    path: StringQueryOperatorInput
    pathCheck: BooleanQueryOperatorInput
    pluginConfig: SitePluginPluginOptionsPluginConfigFilterInput
    plugins: SitePluginPluginOptionsPluginsFilterListInput
    postCssPlugins: SitePluginPluginOptionsPostCssPluginsFilterListInput
    protocol: StringQueryOperatorInput
    query: StringQueryOperatorInput
    region: StringQueryOperatorInput
    related: BooleanQueryOperatorInput
    short_name: StringQueryOperatorInput
    start_url: StringQueryOperatorInput
    staticFolderName: StringQueryOperatorInput
    strict: StringQueryOperatorInput
    stripMetadata: BooleanQueryOperatorInput
    theme_color: StringQueryOperatorInput
    theme_color_in_head: BooleanQueryOperatorInput
    trackingIds: StringQueryOperatorInput
    urlOverrides: SitePluginPluginOptionsUrlOverridesFilterListInput
    width: IntQueryOperatorInput
    withWebp: BooleanQueryOperatorInput
    wrapperStyle: StringQueryOperatorInput
}

input SitePluginPluginOptionsIncludePathsFilterInput {
    regex: StringQueryOperatorInput
}

input SitePluginPluginOptionsIncludePathsFilterListInput {
    elemMatch: SitePluginPluginOptionsIncludePathsFilterInput
}

input SitePluginPluginOptionsLanguageExtensionsFilterInput {
    extend: StringQueryOperatorInput
    language: StringQueryOperatorInput
}

input SitePluginPluginOptionsLanguageExtensionsFilterListInput {
    elemMatch: SitePluginPluginOptionsLanguageExtensionsFilterInput
}

input SitePluginPluginOptionsPluginConfigFilterInput {
    head: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsPluginsFilterInput {
    browserAPIs: StringQueryOperatorInput
    id: StringQueryOperatorInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsPluginsPluginOptionsFilterInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsFilterListInput {
    elemMatch: SitePluginPluginOptionsPluginsFilterInput
}

input SitePluginPluginOptionsPluginsPluginOptionsFilterInput {
    className: StringQueryOperatorInput
    exclude: StringQueryOperatorInput
    languageExtensions: SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterListInput
    maxWidth: IntQueryOperatorInput
    offsetY: IntQueryOperatorInput
    related: BooleanQueryOperatorInput
    staticFolderName: StringQueryOperatorInput
    strict: StringQueryOperatorInput
    urlOverrides: SitePluginPluginOptionsPluginsPluginOptionsUrlOverridesFilterListInput
    width: IntQueryOperatorInput
    withWebp: BooleanQueryOperatorInput
    wrapperStyle: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterInput {
    extend: StringQueryOperatorInput
    language: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterListInput {
    elemMatch: SitePluginPluginOptionsPluginsPluginOptionsLanguageExtensionsFilterInput
}

input SitePluginPluginOptionsPluginsPluginOptionsUrlOverridesFilterInput {
    id: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsPluginOptionsUrlOverridesFilterListInput {
    elemMatch: SitePluginPluginOptionsPluginsPluginOptionsUrlOverridesFilterInput
}

input SitePluginPluginOptionsPostCssPluginsFilterInput {
    postcssPlugin: StringQueryOperatorInput
}

input SitePluginPluginOptionsPostCssPluginsFilterListInput {
    elemMatch: SitePluginPluginOptionsPostCssPluginsFilterInput
}

input SitePluginPluginOptionsUrlOverridesFilterInput {
    id: StringQueryOperatorInput
}

input SitePluginPluginOptionsUrlOverridesFilterListInput {
    elemMatch: SitePluginPluginOptionsUrlOverridesFilterInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataAuthorContactsFilterInput {
    codepen: StringQueryOperatorInput
    email: StringQueryOperatorInput
    facebook: StringQueryOperatorInput
    github: StringQueryOperatorInput
    gitlab: StringQueryOperatorInput
    instagram: StringQueryOperatorInput
    line: StringQueryOperatorInput
    linkedin: StringQueryOperatorInput
    rss: StringQueryOperatorInput
    soundcloud: StringQueryOperatorInput
    stackoverflow: StringQueryOperatorInput
    telegram: StringQueryOperatorInput
    twitter: StringQueryOperatorInput
    vkontakte: StringQueryOperatorInput
    weibo: StringQueryOperatorInput
    youtube: StringQueryOperatorInput
}

input SiteSiteMetadataAuthorFilterInput {
    bio: StringQueryOperatorInput
    contacts: SiteSiteMetadataAuthorContactsFilterInput
    name: StringQueryOperatorInput
    photo: StringQueryOperatorInput
}

input SiteSiteMetadataFilterInput {
    author: SiteSiteMetadataAuthorFilterInput
    copyright: StringQueryOperatorInput
    description: StringQueryOperatorInput
    disqusShortname: StringQueryOperatorInput
    menu: SiteSiteMetadataMenuFilterListInput
    siteUrl: StringQueryOperatorInput
    subtitle: StringQueryOperatorInput
    title: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SiteSiteMetadataMenuFilterInput {
    label: StringQueryOperatorInput
    path: StringQueryOperatorInput
}

input SiteSiteMetadataMenuFilterListInput {
    elemMatch: SiteSiteMetadataMenuFilterInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
